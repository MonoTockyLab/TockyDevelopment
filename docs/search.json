[{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to TockyDevelopment","text":"TockyDevelopment package (Ono & Crompton (2024)) provides integrated workflow studies developmental cell biology related areas, including thymus biology. enables balanced analysis multidimensional marker expression data (marker profiles) Timer fluorescence, revealing temporal dynamics developing cells identifying temporal developmental trajectories data-oriented manner. vignette, guide key steps TockyDevelopment analysis pipeline: Data Preprocessing Precision PCA Clustering Cluster Feature Analysis Group Statistics Tocky Canonical Correspondence Analysis (Tocky-CCA) Tocky Network Analysis Dijkstra-Tocky Pathfinding","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"1. Data preprocessing","title":"Introduction to TockyDevelopment","text":"Follow manual pages TockyPrep package create TockyPrepData object, performing necessary data preprocessing. addition, use GatingTree package apply DefineNegatives determine threshold values markers analyzed. Read following papers (Ono (2024a), Ono (2024b)) principles TockyPrep GatingTree. detailed preprocessing steps, refer TockyPrep documentation.","code":"library(TockyPrep) library(GatingTree) library(TockyDevelopment)"},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"performing-pca","dir":"Articles","previous_headings":"2. Precision PCA and Clustering","what":"Performing PCA","title":"Introduction to TockyDevelopment","text":"Assuming successfully produced TockyPrepData, use TockyPCA function perform Precision PCA:","code":"# Perform Precision PCA on the TockyPrepData object x <- TockyPCA(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"clustering-cells","dir":"Articles","previous_headings":"2. Precision PCA and Clustering","what":"Clustering Cells","title":"Introduction to TockyDevelopment","text":"Cluster cells using TockyClustering:","code":"# Cluster cells into a desired number of clusters x <- TockyClustering(x, num_centre = TRUE)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"visualizing-clustering-results","dir":"Articles","previous_headings":"2. Precision PCA and Clustering","what":"Visualizing Clustering Results","title":"Introduction to TockyDevelopment","text":"Figure 1: Clustering results displayed PCA space.","code":"# Plot clusters in the PCA space PlotTockyClustering(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"cluster-feature-analysis-and-group-statistics","dir":"Articles","previous_headings":"","what":"3. Cluster Feature Analysis and Group Statistics","title":"Introduction to TockyDevelopment","text":"Analyze cluster features group statistics understand characteristics cluster.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"visualizing-cluster-percentages","dir":"Articles","previous_headings":"3. Cluster Feature Analysis and Group Statistics","what":"Visualizing Cluster Percentages","title":"Introduction to TockyDevelopment","text":"Figure 2: Percentage cells cluster.","code":"# Plot the percentage of each cluster within the sample PlotClusterPercentage(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"tocky-canonical-correspondence-analysis","dir":"Articles","previous_headings":"","what":"4. Tocky Canonical Correspondence Analysis","title":"Introduction to TockyDevelopment","text":"Perform Tocky-CCA integrate marker profiles Timer progression.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"performing-tocky-cca","dir":"Articles","previous_headings":"4. Tocky Canonical Correspondence Analysis","what":"Performing Tocky-CCA","title":"Introduction to TockyDevelopment","text":"","code":"# Perform Tocky-CCA on the data x <- TockyCCA(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"visualizing-tocky-cca-results","dir":"Articles","previous_headings":"4. Tocky Canonical Correspondence Analysis","what":"Visualizing Tocky-CCA Results","title":"Introduction to TockyDevelopment","text":"Figure 3: Biplot Tocky-CCA results.","code":"# Generate a biplot of Tocky-CCA results BiplotCCA(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"tocky-network-analysis","dir":"Articles","previous_headings":"","what":"5. Tocky Network Analysis","title":"Introduction to TockyDevelopment","text":"Construct visualize Tocky network analyze relationships clusters.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"constructing-the-network","dir":"Articles","previous_headings":"5. Tocky Network Analysis","what":"Constructing the Network","title":"Introduction to TockyDevelopment","text":"","code":"# Construct the Tocky network x <- TockyNetwork(x, cut_off = 0.2)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"visualizing-the-network","dir":"Articles","previous_headings":"5. Tocky Network Analysis","what":"Visualizing the Network","title":"Introduction to TockyDevelopment","text":"Figure 4: Visualization Tocky network.","code":"# Plot the Tocky network PlotTockyNetwork(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"dijkstra-tocky-pathfinding","dir":"Articles","previous_headings":"","what":"6. Dijkstra-Tocky Pathfinding","title":"Introduction to TockyDevelopment","text":"Identify developmental trajectories using Dijkstra-Tocky Pathfinding algorithm.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/articles/multidimensionalTocky.html","id":"finding-developmental-paths","dir":"Articles","previous_headings":"6. Dijkstra-Tocky Pathfinding","what":"Finding Developmental Paths","title":"Introduction to TockyDevelopment","text":"Figure 5: Identified developmental path Cluster 18 Cluster 19.","code":"# Perform pathfinding between specified clusters x <- DijkstraTockyPath(x, origin_node = '18', destination_node = '19')"},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Masahiro Ono. Author, maintainer.           0000-0002-9284-7326","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Masahiro Ono Tessa Crompton (2024). Multidimensional Toolkit Elucidating Temporal Trajectories Cell Development Vivo. Development.","code":"@Article{,   title = {A Multidimensional Toolkit for Elucidating Temporal Trajectories in Cell Development In Vivo},   author = {Masahiro Ono and Tessa Crompton},   journal = {Development},   year = {2024},   note = {Please also cite the package version you used as it can considerably aid reproducibility. For an exact version reference, please consult the DESCRIPTION file of the TockyDevelopment package.}, }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"tockydevelopment-multidimensional-analysis-of-flow-cytometric-fluorescent-timer-data","dir":"","previous_headings":"","what":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"Author: Dr.Â Masahiro OnoDate: 27 November 2024","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"Fluorescent Timer proteins change emission spectra time serve powerful tools monitoring dynamic cellular processes. Analyzing flow cytometric data Fluorescent Timer protein reporters, especially combined multidimensional marker profiles, challenging due lack suitable analytical methods. TockyDevelopment package provides suite methods integrative analysis multidimensional flow cytometry data involving Fluorescent Timer proteins. enables identification time-dependent trajectories based progression Timer maturation. package particularly suitable analyzing developing cells using Fluorescent Timer reporter systems. Prototype analyses based thymic T cell development using Nr4a3-Tocky mice.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"TockyDevelopment package offers functions analyzing temporal dynamics developing cells development, utilizing Fluorescent Timer protein reporters, cross-analyzing Timer data multidimensional marker expression profiles. package enables identification time-dependent trajectories using Fluorescent Timer data. Integrative Analysis TockyCCA Implements TockyCCA, variant Canonical Correspondence Analysis (CCA) optimized multidimensional flow cytometric data involving Fluorescent Timer proteins. Allows integrative analysis marker expression profiles Timer progression without centering environmental variables (Timer Angle Intensity), preserving directional magnitude properties. Network Analysis Cell Clusters Analyzes TockyCCA outputs using network analysis elucidate relationships cell clusters. Identifies potential developmental trajectories examining connectivity transitions clusters. Pathfinding Analysis Dijkstra-Tocky Algorithm Employs novel pathfinding algorithm, Dijkstra-Tocky, identify time-dependent trajectories based network analysis outputs. Pinpoints developmental paths finding shortest paths network, representing probable sequences cellular transitions.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"availability","dir":"","previous_headings":"","what":"Availability","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"TockyDevelopment available GitHub: TockyDevelopment.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"package-documentation","dir":"","previous_headings":"","what":"Package Documentation","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"TockyDevelopment package documentation available online: Website: https://MonoTockyLab.github.io/TockyDevelopment/ site includes function reference manuals vignettes (tutorials). addition HTML manual pages, PDF manual TockyDevelopment package available. can find installed package directory doc/, can access directly GitHub.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"copyright","dir":"","previous_headings":"Copyright and Citation Guidelines","what":"Copyright","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"code original graphical content within TockyDevelopment package, including anime-like characters logos, copyrighted Masahiro Ono. patent application related methodologies employed within package filed pending. intellectual property held Imperial College London Masahiro Ono.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"usage","dir":"","previous_headings":"Copyright and Citation Guidelines","what":"Usage","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"TockyDevelopment code available GitHub without standard licensing option. intended public viewing verification related associated academic publication. rights granted use, modification, distribution code purposes without explicit permission. permissions inquiries, please contact: m.ono@imperial.ac.uk","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"citing-tockydevelopment","dir":"","previous_headings":"Copyright and Citation Guidelines","what":"Citing TockyDevelopment","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"use TockyDevelopment package components scientific publication public work, please cite follows: Masahiro Ono Tessa Crompton (2024). Multidimensional Toolkit Elucidating Temporal Trajectories Cell Development Vivo. Development. BibTeX Entry:","code":"@article{Ono2024TockyDevelopment,   author = {Masahiro Ono and Tessa Crompton},   title = {A Multidimensional Toolkit for Elucidating Temporal Trajectories in Cell Development In Vivo},   journal = {Development},   year = {2024},   note = {} }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"license","dir":"","previous_headings":"Copyright and Citation Guidelines","what":"License","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"Proprietary License: rights reserved. TockyDevelopment package available proprietary license. Use, modification, distribution software purpose requires explicit permission. licensing options request permissions, please contact Masahiro Ono.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"warranty","dir":"","previous_headings":"Copyright and Citation Guidelines","what":"Warranty","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"software distributed WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"why-citation-is-important","dir":"","previous_headings":"Copyright and Citation Guidelines > Warranty","what":"Why Citation Is Important","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"Citing software âve used crucial acknowledging contributions ensuring reproducibility, critical scientific progress. Giving credit developers researchers contributed tools utilize respects acknowledges intellectual contributions. Proper citations allow researchers access tools versions, thus replicating verifying scientific results. Citations integral scientific ecosystem; help trace evolution ideas enable others build upon existing research. kindly remind users citing software important citing academic articles maintaining integrity scientific record.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"further-resources","dir":"","previous_headings":"Copyright and Citation Guidelines > Warranty","what":"Further Resources","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"additional guidance citation practices maintaining research integrity, recommend visiting Committee Publication Ethics (COPE), offers valuable resources support adhering ethical practices scholarly publishing.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"id_6-the-ono-lab-monotockylab","dir":"","previous_headings":"","what":"6. The Ono Lab (MonoTockyLab)","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"Masahiro Ono Lab (MonoTockyLab) offers innovative approaches analyzing omics flow cytometric data. lab particularly well-known development Timer--cell-kinetics--Activity (Tocky) integrated analysis immunological data using experiments computational analysis. Principal Investigator: Dr.Â Masahiro Ono, Reader Immunology Imperial College London. Dr.Â Ono creator developer Tocky. innovated transgenic computational technologies constitute Tocky. 2008, Dr.Â Ono initiated pioneering transition molecular immunology becoming Integrated Experimental Computational Immunologist, demonstrating visionary leadership pioneering spirit development application multidimensional analysis computational methods address experimental immunological problems. Tocky represents one fusion technologies Dr.Â Ono created developed. Tocky employs Fluorescent Timer protein analyze temporal dynamics cell activities development vivo. lab integrates molecular biology, immunology, computational analysis develop novel research tools, thereby enhancing understanding immune cell biology.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/index.html","id":"id_7-contact-and-more","dir":"","previous_headings":"","what":"7. Contact and More","title":"Multidimensional Analysis and Pathfinding Analysis of High-Dimensional Flow Cytometric Fluorescent Timer Data","text":"Email:  Personal Homepage: GitHub: Twitter: Professional Homepage: Imperial College London - Masahiro Ono","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/BiplotCCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â BiplotCCA","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â BiplotCCA","text":"Generate CCA heatmap plots Tocky data (Timer-Blue vs Timer-Red 2d plots)","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/BiplotCCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â BiplotCCA","text":"","code":"BiplotCCA(   x,   ncol = 2,   nrow = 1,   jpeg = FALSE,   select = FALSE,   colour = \"Spectral\",   xlim = NULL,   ylim = NULL,   max_cells_displayed = 30000,   verbose = FALSE )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/BiplotCCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â BiplotCCA","text":"x TockyPrepData object produced function Tocky ncol number columns plot nrow number rows plot jpeg logical argument. FALSE, open device window plots generated. select Whether interactively select markers processed. FALSE, log-transformed markers apart Timer fluorescence (stored TockyPrepData) used. colour Either 'Spectral' 'BlueRed' Angle colour key. xlim Optional x-axis limits. ylim Optional y-axis limits. max_cells_displayed maximum number cells display plots verbose Logical indicating whether print progress messages outputs.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/BiplotCCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â BiplotCCA","text":"Generates CCA heatmap plot optionally saves jpeg file.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/BiplotCCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â BiplotCCA","text":"","code":"if (FALSE) { # \\dontrun{ BiplotCCA(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/DijkstraTockyPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","title":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","text":"function identifies paths within Tocky Network using Dijkstra-Tocky Pathfinding","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/DijkstraTockyPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","text":"","code":"DijkstraTockyPath(x, origin_node, destination_node, verbose = TRUE)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/DijkstraTockyPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","text":"x TockyPrepData containing network relevant data. origin_node starting node (cluster) path. destination_node ending node (cluster) path. verbose Logical indicating whether print progress messages outputs.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/DijkstraTockyPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","text":"original TockyPrepData returned additional list attached         containing ordered paths closest path.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/DijkstraTockyPath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","text":"function computes mean TimerAngles cluster, identifies          possible increasing paths origin destination,          calculates total weight path find closest one.          Paths determined increasing TimerAngle values, ensuring          step along path moves node higher TimerAngle.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/DijkstraTockyPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dijkstra-Tocky Pathfinding â DijkstraTockyPath","text":"","code":"if (FALSE) { # \\dontrun{ x <- DijkstraTockyPath(x, origin_node = '3', destination_node = '21') } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/GetStatsClusterPercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Cluster Percentage Data and Stats â GetStatsClusterPercentage","title":"Retrieve Cluster Percentage Data and Stats â GetStatsClusterPercentage","text":"function retrieves cluster percentage data TockyPrepData already processed PlotClusterPercentage function. can display statistics Terminal write CSV files.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/GetStatsClusterPercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Cluster Percentage Data and Stats â GetStatsClusterPercentage","text":"","code":"GetStatsClusterPercentage(   x,   writeResults = FALSE,   filename = \"cluster_percentage\" )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/GetStatsClusterPercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Cluster Percentage Data and Stats â GetStatsClusterPercentage","text":"x TockyPrepData processed PlotClusterPercentage function. writeResults logical value. TRUE, two files generated containing group statistics p-values, respectively. FALSE, statistical results displayed Terminal. filename (optional) Base name output files writeResults TRUE.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/GetStatsClusterPercentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Cluster Percentage Data and Stats â GetStatsClusterPercentage","text":"TockyPrepData passed input, consistency function design, though function primarily focuses data retrieval display file writing.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/GetStatsClusterPercentage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Cluster Percentage Data and Stats â GetStatsClusterPercentage","text":"","code":"if (FALSE) { # \\dontrun{   GetStatsClusterPercentage(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotClusterPercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cluster Percentage by Bar plot â PlotClusterPercentage","title":"Plot Cluster Percentage by Bar plot â PlotClusterPercentage","text":"Plot Cluster Percentage Bar plot","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotClusterPercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cluster Percentage by Bar plot â PlotClusterPercentage","text":"","code":"PlotClusterPercentage(   x,   p_adjust_method = \"fdr\",   colours = NULL,   verbose = TRUE )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotClusterPercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cluster Percentage by Bar plot â PlotClusterPercentage","text":"x TockyPrepData running function ClusteringPCA. p_adjust_method method p-value adjustment statistical tests. colours (optional) vector specifying colours different groups plot. example, colours = c(\"purple\", \"black\"). verbose Logical indicating whether print progress messages outputs.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotClusterPercentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Cluster Percentage by Bar plot â PlotClusterPercentage","text":"TockyPrepData added statistics plots significant clusters.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotClusterPercentage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Cluster Percentage by Bar plot â PlotClusterPercentage","text":"","code":"if (FALSE) { # \\dontrun{ x <- PlotClusterPercentage(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotDimRedLoading.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a gate to define negative (and positive) for each marker expression â PlotDimRedLoading","title":"Set a gate to define negative (and positive) for each marker expression â PlotDimRedLoading","text":"Set gate define negative (positive) marker expression","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotDimRedLoading.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a gate to define negative (and positive) for each marker expression â PlotDimRedLoading","text":"","code":"PlotDimRedLoading(x, reduction = \"PCA\")"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotDimRedLoading.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a gate to define negative (and positive) for each marker expression â PlotDimRedLoading","text":"x TockyPrepData. reduction Choose whether use PCA CCA reduction method.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotDimRedLoading.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a gate to define negative (and positive) for each marker expression â PlotDimRedLoading","text":"TockyPrepData (unchanged) safety.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotDimRedLoading.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a gate to define negative (and positive) for each marker expression â PlotDimRedLoading","text":"","code":"if (FALSE) { # \\dontrun{ PlotDimRedLoading(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotPCAHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate PCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotPCAHeatmap","title":"Generate PCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotPCAHeatmap","text":"Generate PCA heatmap plots Tocky data (Timer-Blue vs Timer-Red 2d plots)","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotPCAHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate PCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotPCAHeatmap","text":"","code":"PlotPCAHeatmap(   x,   ncol = 2,   nrow = 1,   jpeg = FALSE,   select = FALSE,   biplot_scaling = 3,   colour = \"Spectral\",   xlim = NULL,   ylim = NULL )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotPCAHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate PCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotPCAHeatmap","text":"x TockyPrepData object produced function Tocky ncol number columns plot nrow number rows plot jpeg logical argument. FALSE, open device window plots generated. select Whether interactively select markers processed. FALSE, log-transformed markers apart Timer fluorescence (stored TockyPrepData) used. biplot_scaling number multiplying biplot values visibility. Default 3. colour Either 'Spectral' 'BlueRed' Angle colour key. xlim Optional x-axis limits. ylim Optional y-axis limits.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotPCAHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate PCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotPCAHeatmap","text":"Generates CCA heatmap plot optionally saves jpeg file.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotPCAHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate PCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotPCAHeatmap","text":"","code":"if (FALSE) { # \\dontrun{ PlotPCAHeatmap(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyCCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotTockyCCA","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotTockyCCA","text":"Generate CCA heatmap plots Tocky data (Timer-Blue vs Timer-Red 2d plots)","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyCCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotTockyCCA","text":"","code":"PlotTockyCCA(x, ncol = 4, nrow = 3, jpeg = FALSE, select = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyCCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotTockyCCA","text":"x TockyPrepData object produced function Tocky ncol number columns plot nrow number rows plot jpeg logical arguement. FALSE, open device window plots generated. select Whether interactively select markers processed. FALSE, log-transformed markers apart Timer fluorescence (stored TockyPrepData) used.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyCCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate CCA heatmap plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) â PlotTockyCCA","text":"","code":"if (FALSE) { # \\dontrun{ PlotTockyCCA(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Tocky Clusters â PlotTockyClustering","title":"Plot Tocky Clusters â PlotTockyClustering","text":"Plot Tocky Clusters","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Tocky Clusters â PlotTockyClustering","text":"","code":"PlotTockyClustering(   x,   jpeg = FALSE,   max_cells_displayed = 30000,   filename = NULL )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Tocky Clusters â PlotTockyClustering","text":"x TockyPrepData running function TockyClustering function generate PCA plots cluster Angle data jpeg Whether jpeg file. default pdf = FALSE, jpeg file produced. max_cells_displayed number cells displayed plots. filename character string file name","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Tocky Clusters â PlotTockyClustering","text":"slot Reduction contain new slot Tocky_clusters, includes kmeans clustering result","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Tocky Clusters â PlotTockyClustering","text":"","code":"if (FALSE) { # \\dontrun{ PlotTockyClustering(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot A Tocky Network â PlotTockyNetwork","title":"Plot A Tocky Network â PlotTockyNetwork","text":"Plot Tocky Network","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot A Tocky Network â PlotTockyNetwork","text":"","code":"PlotTockyNetwork(   x,   reduction = \"CCA\",   select_variable = FALSE,   edge_scale = NULL,   mds = FALSE,   reflect = NULL,   log2fc = FALSE,   p_adjust = NULL )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot A Tocky Network â PlotTockyNetwork","text":"x TockyPrepData running function TockyNetwork. reduction Choose whether use PCA CCA reduction method. select_variable Whether choose variable (marker expression). default FALSE produces Tocky Angle Intensity. edge_scale scale factor edge thickness. mds Multidimensional Scaling used constructing network graph. reflect Multidimensional Scaling used, graph can refelected either 'horizontal' 'vertical'. log2fc Logical. TRUE, colours nodes determined log2 fold change two groups. p_adjust p_adjust \"none\", p-value adjustment used. Note p-values two-group comparisons stored within TockyPrepData object calculated 'PlotClusterPercentage'.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot A Tocky Network â PlotTockyNetwork","text":"Network plot produced, showing clusters vertices distance clusters edges.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot A Tocky Network â PlotTockyNetwork","text":"","code":"if (FALSE) { # \\dontrun{ PlotTockyNetwork(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce PCA plot â PlotTockyPCA","title":"Produce PCA plot â PlotTockyPCA","text":"Produce PCA plot","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce PCA plot â PlotTockyPCA","text":"","code":"PlotTockyPCA(x, jpeg = FALSE, cluster = FALSE, filename = NULL)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce PCA plot â PlotTockyPCA","text":"x TockyPrepData running function Tocky. jpeg logical arguement. FALSE, open device window plots generated. cluster logical arguement. TRUE, clusters coloured output plots. filename character string file name","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce PCA plot â PlotTockyPCA","text":"TockyPrepData simply avoid null return.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/PlotTockyPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce PCA plot â PlotTockyPCA","text":"","code":"if (FALSE) { # \\dontrun{ PlotTockyPCA(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyCCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) for TockyPrepData. â TockyCCA","title":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) for TockyPrepData. â TockyCCA","text":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) TockyPrepData.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyCCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) for TockyPrepData. â TockyCCA","text":"","code":"TockyCCA(x, variables = NULL, marker_neg_gate = TRUE, select = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyCCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) for TockyPrepData. â TockyCCA","text":"x TockyPrepData running function Tocky. variables Variables (markers) CCA analysis. NULL, variables chosed interactively. marker_neg_gate Whether autofluorescence values considered zero . approach recommended. Perform DefineNegative variables used TockyCCA advance. select Whether interactively select markers processed. FALSE, log-transformed markers apart Timer fluorescence (stored TockyPrepData) used.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyCCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) for TockyPrepData. â TockyCCA","text":"slot Reduction contain CCA results.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyCCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Dimensional Reduction using Canonical Correspondence Analysis (CCA) for TockyPrepData. â TockyCCA","text":"","code":"if (FALSE) { # \\dontrun{ x <- TockyCCA(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering Cells Using Dimensional Reduction by TockyPCA. â TockyClustering","title":"Clustering Cells Using Dimensional Reduction by TockyPCA. â TockyClustering","text":"Clustering Cells Using Dimensional Reduction TockyPCA.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering Cells Using Dimensional Reduction by TockyPCA. â TockyClustering","text":"","code":"TockyClustering(   x,   choose_dimension = FALSE,   max_cells_displayed = 30000,   num_centre = FALSE )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering Cells Using Dimensional Reduction by TockyPCA. â TockyClustering","text":"x TockyPrepData running function TockyPCA. choose_dimension Whether number dimension specified PCA plot. Default FALSE. max_cells_displayed number cells displayed plots interatcive PCA plots. num_centre Whether number clusters specified. Default FALSE number variables used.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering Cells Using Dimensional Reduction by TockyPCA. â TockyClustering","text":"slot Reduction contain new slot PCAclusters, includes kmeans clustering result","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clustering Cells Using Dimensional Reduction by TockyPCA. â TockyClustering","text":"","code":"if (FALSE) { # \\dontrun{ x <- TockyClustering(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce A Network of Tocky Clusters â TockyNetwork","title":"Produce A Network of Tocky Clusters â TockyNetwork","text":"Produce Network Tocky Clusters","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce A Network of Tocky Clusters â TockyNetwork","text":"","code":"TockyNetwork(x, reduction = \"CCA\", cut_off = 0.2)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce A Network of Tocky Clusters â TockyNetwork","text":"x TockyPrepData running function TockyClustering. reduction Choose whether use PCA CCA reduction method. using CCA, TockyCCA must applied TockyPrepData. cut_off Threshold value quantile percentage edge connection. example, default 0.2 set threshold 20% quantile distance clusters, connecting neighbor clusters.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce A Network of Tocky Clusters â TockyNetwork","text":"revised TockyPrepData containing igraph network object. Network constructed based neighbor proximity.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce A Network of Tocky Clusters â TockyNetwork","text":"","code":"if (FALSE) { # \\dontrun{ x <- TockyNetwork(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Principal Component Analysis for TockyPrepData. â TockyPCA","title":"Perform Principal Component Analysis for TockyPrepData. â TockyPCA","text":"Perform Principal Component Analysis TockyPrepData.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Principal Component Analysis for TockyPrepData. â TockyPCA","text":"","code":"TockyPCA(   x,   variables = NULL,   marker_neg_gate = TRUE,   cleaning = FALSE,   select = TRUE,   Timer = FALSE )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Principal Component Analysis for TockyPrepData. â TockyPCA","text":"x TockyPrepData running function Tocky. variables Variables (markers) PCA analysis. NULL, variables chosed interactively. marker_neg_gate Whether autofluorescence values considered zero. approach recommended requires DefineNegative. cleaning Whether data cleaning performed remove cells zero value marker. recommended unless reason use DefineNegative collapse negative data. select Whether interactively select markers processed. FALSE, log-transformed markers apart Timer fluorescence (stored TockyPrepData) used. Timer Whether Timer data (normalised Angle/Intensity) used.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/TockyPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Principal Component Analysis for TockyPrepData. â TockyPCA","text":"","code":"if (FALSE) { # \\dontrun{ x <- TockyPCA(x, variables = NULL, cleaning = FALSE, marker_neg_gate = TRUE) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/angle_to_colour.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Angle into colour code â angle_to_colour","title":"Convert Angle into colour code â angle_to_colour","text":"Convert Angle colour code","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/angle_to_colour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Angle into colour code â angle_to_colour","text":"","code":"angle_to_colour(x, alpha = 0.3)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/angle_to_colour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Angle into colour code â angle_to_colour","text":"x Angle numeric vector alpha numeric vector 0 1 transparency","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/angle_to_colour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Angle into colour code â angle_to_colour","text":"character vector colour code","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/angle_to_colour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Angle into colour code â angle_to_colour","text":"","code":"if (FALSE) { # \\dontrun{ col  <-  angle_to_colour(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/cluster_cell_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of cells in each cluster in each sample using a Tocky Object. â cluster_cell_num","title":"Calculate the number of cells in each cluster in each sample using a Tocky Object. â cluster_cell_num","text":"Calculate number cells cluster sample using Tocky Object.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/cluster_cell_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of cells in each cluster in each sample using a Tocky Object. â cluster_cell_num","text":"","code":"cluster_cell_num(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/cluster_cell_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of cells in each cluster in each sample using a Tocky Object. â cluster_cell_num","text":"x TockyPrepData running function TockyClustering.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/cluster_cell_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of cells in each cluster in each sample using a Tocky Object. â cluster_cell_num","text":"slot Reduction contain new slot cluster_cellnumbers, includes cell number cluster sample","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/cluster_cell_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the number of cells in each cluster in each sample using a Tocky Object. â cluster_cell_num","text":"","code":"if (FALSE) { # \\dontrun{ x <- cluster_cell_num(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"To produce distinct colour codes â color_palette","title":"To produce distinct colour codes â color_palette","text":"produce distinct colour codes","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To produce distinct colour codes â color_palette","text":"","code":"color_palette(x)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/color_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To produce distinct colour codes â color_palette","text":"x numeric vector","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/color_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To produce distinct colour codes â color_palette","text":"character vector colour code","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/color_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To produce distinct colour codes â color_palette","text":"","code":"if (FALSE) { # \\dontrun{ col  <-  color_palette(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/get_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Path from Predecessors Array â get_path","title":"Retrieve a Path from Predecessors Array â get_path","text":"function reconstructs path network vector predecessors, starting specified destination node tracing back origin node. function returns path sequence node indices.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/get_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Path from Predecessors Array â get_path","text":"","code":"get_path(predecessors, origin_node, destination)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/get_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Path from Predecessors Array â get_path","text":"predecessors numeric vector element predecessor node given node index, typically derived shortest path algorithm like Dijkstra's. origin_node starting node index path. destination destination node index path.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/get_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Path from Predecessors Array â get_path","text":"Returns vector node indices representing path origin node         destination node. path found (.e., disconnected components),         returns NULL.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/get_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Path from Predecessors Array â get_path","text":"","code":"if (FALSE) { # \\dontrun{ # Create a predecessors vector from a hypothetical Dijkstra's algorithm predecessors <- c(6, 5, 5, 3, 6, -1, -1) # Retrieve the path from node 1 to node 5 get_path(predecessors, origin_node = 1, destination = 5) } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_color_code.html","id":null,"dir":"Reference","previous_headings":"","what":"To produce colour key as a gradient rectangle â plot_color_code","title":"To produce colour key as a gradient rectangle â plot_color_code","text":"produce colour key gradient rectangle","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_color_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To produce colour key as a gradient rectangle â plot_color_code","text":"","code":"plot_color_code(   expression = NULL,   x,   y,   width,   height,   colour = \"Spectral\",   method = \"Expression\" )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_color_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To produce colour key as a gradient rectangle â plot_color_code","text":"expression numeric vector defining expression plotted. x number. x position lower left corner rectangle y number. y position lower left corner rectangle width number. width rectangle height number. height rectangle colour Either 'Spectral' 'BlueRed' Angle colour key. method Either 'Angle' 'Spectral' Angle expression, respectively.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_color_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To produce colour key as a gradient rectangle â plot_color_code","text":"","code":"if (FALSE) { # \\dontrun{ plot(1:5) plot_color_code(x = 3, y = 4.5, width = 1, height = 0.3, colour = 'Spectral', method = 'Angle') } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_network_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Network Path â plot_network_path","title":"Plot Network Path â plot_network_path","text":"Visualizes network using Fruchterman-Reingold layout, option highlight specific path customize vertex colors. Nodes edges along path highlighted distinguish rest network.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_network_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Network Path â plot_network_path","text":"","code":"plot_network_path(   network,   path = NULL,   vertex_col = \"grey\",   title = \"Angle Path\" )"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_network_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Network Path â plot_network_path","text":"network igraph network object visualized. function expects object represent graph nodes edges properly defined. path Optional; vector node names indicating sequence nodes along path highlighted. provided, path visually distinguished plot. vertex_col character string indicating default color vertices path. allows customization network's appearance. title character string providing title network plot. allows basic customization plot's appearance.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_network_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Network Path â plot_network_path","text":"Invisibly returns NULL. function used side effect plotting network.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/plot_network_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Network Path â plot_network_path","text":"","code":"if (FALSE) { # \\dontrun{ plot_network_path(net, path = c(\"node1\", \"node2\", \"node3\"), vertex_col = \"lightblue\", title = \"Sample Network Path\") } # }"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/quantile_cut.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify a vector into a factor with a desired number of levels by quantiles â quantile_cut","title":"Stratify a vector into a factor with a desired number of levels by quantiles â quantile_cut","text":"Stratify vector factor desired number levels quantiles","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/quantile_cut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify a vector into a factor with a desired number of levels by quantiles â quantile_cut","text":"","code":"quantile_cut(x, n)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/quantile_cut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify a vector into a factor with a desired number of levels by quantiles â quantile_cut","text":"x numeric vector n number breaks","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/quantile_cut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratify a vector into a factor with a desired number of levels by quantiles â quantile_cut","text":"factor","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/quantile_cut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratify a vector into a factor with a desired number of levels by quantiles â quantile_cut","text":"","code":"x <- runif(1000) g <- quantile_cut(x, n = 4)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/showDijkstraTockyPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Closest Tocky Angle Gradient Path â showDijkstraTockyPath","title":"Display Closest Tocky Angle Gradient Path â showDijkstraTockyPath","text":"Retrieves displays closest Tocky Angle Gradient Path TockyPrepData. function intended use running DijkstraTockyPath quickly access review computed closest path based increasing TimerAngle values.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/showDijkstraTockyPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Closest Tocky Angle Gradient Path â showDijkstraTockyPath","text":"","code":"showDijkstraTockyPath(x, origin_node, destination_node)"},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/showDijkstraTockyPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Closest Tocky Angle Gradient Path â showDijkstraTockyPath","text":"x TockyPrepData already processed DijkstraTockyPath compute Tocky Angle Gradient Path. origin_node starting node (cluster) path. destination_node ending node (cluster) path.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/showDijkstraTockyPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Closest Tocky Angle Gradient Path â showDijkstraTockyPath","text":"Prints closest path also returns analysis usage.","code":""},{"path":"https://MonoTockyLab.github.io/TockyDevelopment/reference/showDijkstraTockyPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Closest Tocky Angle Gradient Path â showDijkstraTockyPath","text":"","code":"if (FALSE) { # \\dontrun{ showDijkstraTockyPath(x) } # }"}]
